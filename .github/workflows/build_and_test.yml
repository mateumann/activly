name: "Build & Test"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  #schedule:
  #  - cron: "0 10 * * *"

jobs:
  build_n_test:
    name: "Build & Test"
    strategy:
      matrix:
        go-version: [ "1.21" ]
        os: [ "ubuntu-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Check out the code"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Set up Go ${{ matrix.go-version }}"
        uses: actions/setup-go@v4
        id: go
        with:
          go-version: ${{ matrix.go-version }}
      - name: "Build"
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o build/activly ./cmd/main.go
      - name: "Test with coverage"
        run: go test -coverprofile=coverage.out -v ./...
      - name: "Report test coverage to DeepSource"
        uses: deepsourcelabs/test-coverage-action@master
        with:
          coverage-file: coverage.out
          key: "go"
          dsn: ${{ secrets.DEEPSOURCE_DSN }}
      - name: "Report test coverage to Codacy"
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          coverage-reports: coverage.out
          force-coverage-parser: "go"
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
